🎓 Student and Course Management System (C++ OOP)

This project implements a simple Student and Course Management System using Object-Oriented Programming (OOP) concepts in C++.
It demonstrates class design, memory management, operator overloading, static members, and deep copy implementation.

✨ Features
🧑‍🎓 Student Class

Stores name, ID, and 3 enrolled courses dynamically.

Supports deep copy using a custom copy constructor.

Tracks the total number of students via a static variable.

Overloaded operators:

>> and << → Input/output

== → Compare student IDs

📘 Course Class

Stores course name and credit hours.

Tracks the total number of courses.

Overloaded operators:

>> and << → Input/output

+ → Sum credit hours

⚙️ Memory Management

Uses new and delete for safe dynamic allocation.

Custom destructor ensures proper cleanup.

💻 Interactive Console Input

Accepts user input for students and courses.

Displays details using overloaded <<.

🧪 Sample Operations

Create and display students and courses.

Copy student objects (verify deep copy vs shallow copy).

Add credit hours of two courses (course1 + course2).

Track total number of students and courses created.

📌 Concepts Demonstrated

Classes and objects

Dynamic memory allocation

Deep copy vs shallow copy

Static members and methods

Operator overloading

Friend functions

🛠️ Technologies

Language: C++

Standard: C++11 or later

Compiler: g++, Visual Studio, or any standard C++ compiler